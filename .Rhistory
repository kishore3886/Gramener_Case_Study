if(sorted_Random_Numbers[i]==sorted_Random_Numbers[z])
{
tally[i]=tally[i]+1
}
}
}
for (i in 1:100)
{
if (tally[i] > maxCount)
{
maxCount <- tally[i];
modeValue <- sorted_Random_Numbers[i];
}
}
print(maxCount)
return(modeValue)
}
fn <- function(){
sorted_Random_Numbers<-random_Numbers
#Decreasing order
for (i in 1:99)
{
for (j in 1:99)
{
if (sorted_Random_Numbers[j] > sorted_Random_Numbers[j+1])
{
swap = sorted_Random_Numbers[j];
sorted_Random_Numbers[j]   = sorted_Random_Numbers[j+1];
sorted_Random_Numbers[j+1] = swap;
}
}
}
sorted_Random_Numbers
#sorting Done
s<-length(sorted_Random_Numbers)
if((s %% 2) == 0){
a<-s/2;
b<-a+1
random_Numbers_median_Local<-(sorted_Random_Numbers[a]+sorted_Random_Numbers[b])/2
}
if(!(s %% 2) == 0){
a<-ceiling(s/2) ;
random_Numbers_median_Local<-sorted_Random_Numbers[a]
}
print(random_Numbers_median_Local)
return(random_Numbers_median_Local)
}
#starts here----------------------------------------------------------------------
random_Numbers<- rand_generater()
min_Number<-cal_Minimum()
max_Number<-cal_Maximum()
random_Numbers_Mean<-cal_Mean()
random_Numbers_StandardDeviation<-cal_StandardDeviation()
random_Numbers_Mode<-cal_Mode()
random_Numbers_Median<-fn()
random_Numbers
sorted_Random_Numbers
min_Number
max_Number
random_Numbers_Mean
random_Numbers_StandardDeviation
random_Numbers_Mode
random_Numbers_Median
#Testing the results------------------------------------------------
boxplot(random_Numbers)
#to show all numbers are generated randomly
plot(random_Numbers)
abline(a=0,b=1)
# testing for mean Hypothesis testing
test_cal <-t.test(random_Numbers, alternative = "two.sided",mu=60,conf.int=0.95)
test_cal
#df- Degrees of freedom
(49.91-60)/(sd(random_Numbers)/sqrt(length(random_Numbers)))
#-----------------SLOC------------------------------
bank <- read.csv("https://raw.githubusercontent.com/kshitijjain91/Credit-Risk-Capstone/master/datasets/Demogs_v1.csv")
str(bank)
head(bank)
head(bank$Income,25)
head(bank$Income)
income<- bank$Income
length((income))
n=25
k=400
sample_means<- vector(mode="numeric",length=k)
sample_means<- vector(mode="numeric",length=k)
for(sample_num in 1:k){
s<- sample(income,n,replace = FALSE)
sample_means[sample_num]<-s
}
warning()
sample_means
head(sample_means)
head(sample_means,10)
population_Mean<- mean(income,na.rm = TRUE)
population_Mean
mean_Of_SampleMean
mean_Of_SampleMean<- mean(sample_means,na.rm = TRUE)
population_Mean
mean_Of_SampleMean
population_sd<- sd(income)
population_sd_root_n<-population_sd/sqrt(n)
std_err<- sd(sample_means)
population_sd_root_n
std_err
population_sd<- sd(income,na.rm = TRUE)
population_sd_root_n<-population_sd/sqrt(n)
population_sd_root_n
std_err<- sd(sample_means,na.rm = TRUE)
sample_means<- data.frame(sample_means)
std_err<- sd(sample_means,na.rm = TRUE)
sample_means= vector(mode="numeric",length=k)
for(sample_num in 1:k){
s<- sample(income,n,replace = FALSE)
sample_means[sample_num]<-s
}
for(sample_num in 1:k){
s<- sample(income,n,replace = F)
sample_means[sample_num]<-mean(s,na.rm = T)
}
population_Mean<- mean(income,na.rm = TRUE)
mean_Of_SampleMean<- mean(sample_means,na.rm = TRUE)
population_Mean
mean_Of_SampleMean
population_sd<- sd(income,na.rm = TRUE)
population_sd_root_n<-population_sd/sqrt(n)
std_err<- sd(sample_means,na.rm = TRUE)
population_sd_root_n
std_err
sample_means<- data.frame(sample_means)
ggplot(sample_means,aes(sample_means))+geom_density()
n=5
k=400
#take sample of size n and store it in a vector
sample_means= vector(mode="numeric",length=k)
for(sample_num in 1:k){
s<- sample(income,n,replace = F)
sample_means[sample_num]<-mean(s,na.rm = T)
}
warning()
head(sample_means,10)
#population mean and sample mean
population_Mean<- mean(income,na.rm = TRUE)
mean_Of_SampleMean<- mean(sample_means,na.rm = TRUE)
population_Mean
mean_Of_SampleMean
#population sd
population_sd<- sd(income,na.rm = TRUE)
population_sd_root_n<-population_sd/sqrt(n)
std_err<- sd(sample_means,na.rm = TRUE)
population_sd_root_n
std_err
sample_means<- data.frame(sample_means)
ggplot(sample_means,aes(sample_means))+geom_density()
loan_Copy
loan_Data<- read.csv("loan.csv")
setwd("~/R/gramener casestudy")
loan_Data<- read.csv("loan.csv")
drops <- c("total_il_high_credit_limit","total_bc_limit","total_bal_ex_mort","tot_hi_cred_lim","tax_liens")
loan_Data<-loan_Data[ , !(names(loan_Data) %in% drops)]
drops<- c("percent_bc_gt_75","pct_tl_nvr_dlq","num_tl_op_past_12m","num_tl_90g_dpd_24m","num_tl_30dpd",
"num_tl_120dpd_2m","num_sats","num_rev_tl_bal_gt_0","num_rev_accts","num_op_rev_tl","num_il_tl",
"num_bc_tl","num_bc_sats","num_actv_rev_tl","num_actv_bc_tl","num_accts_ever_120_pd",
"mths_since_recent_revol_delinq","mths_since_recent_inq","mths_since_recent_bc_dlq","mths_since_recent_bc",
"mort_acc","mo_sin_rcnt_tl","mo_sin_rcnt_rev_tl_op","mo_sin_old_rev_tl_op","mo_sin_old_il_acct","delinq_amnt",
"chargeoff_within_12_mths","bc_util","bc_open_to_buy","avg_cur_bal","acc_open_past_24mths","inq_last_12m")
loan_Data<-loan_Data[ , !(names(loan_Data) %in% drops)]
drops<-c("total_cu_tl","inq_fi","total_rev_hi_lim","all_util","max_bal_bc","open_rv_24m","il_util","total_bal_il"
,"mths_since_rcnt_il","open_il_24m","open_il_12m","open_il_6m","open_acc_6m","tot_cur_bal","tot_coll_amt"
,"acc_now_delinq","verification_status_joint","dti_joint","annual_inc_joint","mths_since_last_major_derog"
,"policy_code","collections_12_mths_ex_med")
loan_Data<-loan_Data[ , !(names(loan_Data) %in% drops)]
drops<-c("open_rv_12m","application_type","initial_list_status","pymnt_plan")
loan_Data<-loan_Data[ , !(names(loan_Data) %in% drops)]
loan_Data$emp_title<-sub("^$","Other",loan_Data$emp_title)
loan_Copy<-loan_Data
summary(loan_Copy$annual_inc)
plot(loan_Copy$annual_inc)
boxplot(loan_Copy$annual_inc)
loan_Copy_outliers<- loan_Copy[loan_Copy$annual_inc<2e+06]
loan_Copy_outliers<- loan_Copy[annual_inc<2e+06]
loan_Copy_outliers<- loan_Copy[loan_Copy$annual_inc <10000]
loan_Copy_outliers<- loan_Copy[!loan_Copy$annual_inc > 10000]
loan_Copy<- loan_Copy[!loan_Copy$annual_inc > 10000]
class(loan_Copy$annual_inc)
loan_Copy<- subset(loan_Copy,loan_Copy$annual_inc<2e+1)
loan_Copy<-loan_Data
loan_Copy<- subset(loan_Copy,loan_Copy$annual_inc<2000000)
summary(loan_Copy$annual_inc)
nrow(loan_Copy$annual_inc>100000)
plot(loan_Copy$annual_inc)
loan_Copy<- subset(loan_Copy,loan_Copy$annual_inc<1500000)
plot(loan_Copy$annual_inc)
loan_Copy<- subset(loan_Copy,loan_Copy$annual_inc<1000000)
plot(loan_Copy$annual_inc)
loan_Copy$annual_income_slot<- ifelse(loan_Copy$annual_inc<10000,"10000",ifelse(loan_Copy$annual_inc<20000,"20000",ifelse(loan_Copy$annual_inc<30000,"30000",ifelse(loan_Copy$annual_inc<40000,"40000",ifelse(loan_Copy$annual_inc<50000,"50000",ifelse(loan_Copy$annual_inc<60000,"60000","100000"))))))
View(loan_Copy)
write.csv(loan_Copy,file="cleaned_Data_final.csv")
loan_Copy_ChargedOff
loan_Copy$int_rate<- str_replace_all(loan_Copy$int_rate,'%','')
library("party")
library(ggplot2)
library(stringr)
library(dplyr)
loan_Copy$int_rate<- str_replace_all(loan_Copy$int_rate,'%','')
loan_Copy$int_rate<-as.numeric(loan_Copy$int_rate)
as.POSIXct(loan_Copy$earliest_cr_line)
loan_Copy
loan_Copy_FullyPaid<- subset(loan_Copy,loan_Copy$loan_status=="Fully Paid")
loan_Copy_ChargedOff<-subset(loan_Copy,loan_Copy$loan_status=="Charged Off")
loan_Copy_Current<-subset(loan_Copy,loan_Copy$loan_status=="Current")
nrow(loan_Copy_ChargedOff)+nrow(loan_Copy_Current)+nrow(loan_Copy_FullyPaid)
Summary(loan_Copy_ChargedOff)
summary(loan_Copy_ChargedOff)
summary(loan_Copy_ChargedOff$annual_inc)
summary(loan_Copy_ChargedOff$annual_income_slot)
hist(loan_Copy_ChargedOff$annual_income_slot)
hist(loan_Copy_ChargedOff$annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income")
loan_Copy$annual_income_slot<- ifelse(loan_Copy$annual_inc<10000,10000,ifelse(loan_Copy$annual_inc<20000,20000,ifelse(loan_Copy$annual_inc<30000,30000,ifelse(loan_Copy$annual_inc<40000,40000,ifelse(loan_Copy$annual_inc<50000,50000,ifelse(loan_Copy$annual_inc<60000,60000,100000))))))
write.csv(loan_Copy,file="cleaned_Data_final.csv")
View(loan_Copy)
loan_Copy_FullyPaid<- subset(loan_Copy,loan_Copy$loan_status=="Fully Paid")
loan_Copy_ChargedOff<-subset(loan_Copy,loan_Copy$loan_status=="Charged Off")
loan_Copy_Current<-subset(loan_Copy,loan_Copy$loan_status=="Current")
hist(loan_Copy_ChargedOff$annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income")
loan_Copy$annual_income_slot<- ifelse(loan_Copy$annual_inc<10000,10000,ifelse(loan_Copy$annual_inc<20000,20000,ifelse(loan_Copy$annual_inc<30000,30000,ifelse(loan_Copy$annual_inc<40000,40000,ifelse(loan_Copy$annual_inc<50000,50000,ifelse(loan_Copy$annual_inc<60000,60000,ifelse(loan_Copy$annual_inc<70000,70000,ifelse(loan_Copy$annual_inc<80000,80000,ifelse(loan_Copy$annual_inc<90000,90000,100000))))))))
write.csv(loan_Copy,file="cleaned_Data_final.csv")
#to check number od rows and columns of data after cleaning  nrow(loan_Data)
ncol(loan_Data)
nrow(loan_Data)
#convert int_rate to numeric for calculations purposes
loan_Copy$int_rate<- str_replace_all(loan_Copy$int_rate,'%','')
loan_Copy$int_rate<-as.numeric(loan_Copy$int_rate)
#as.POSIXct(loan_Copy$earliest_cr_line)
#--------------------------------FILTER THE DATA AS PER LOAN STATUS(SEGMENTING DATA)---------------------------
#
loan_Copy_FullyPaid<- subset(loan_Copy,loan_Copy$loan_status=="Fully Paid")
loan_Copy_ChargedOff<-subset(loan_Copy,loan_Copy$loan_status=="Charged Off")
loan_Copy_Current<-subset(loan_Copy,loan_Copy$loan_status=="Current")
#to confirm no rows are missing
nrow(loan_Copy_ChargedOff)+nrow(loan_Copy_Current)+nrow(loan_Copy_FullyPaid)
#-----------------------------------UNIVARIATE ANALYSIS STARTS HERE----------------------
#TERM VS INTEREST RATE to check if interest rate is affected by term
aggregate(loan_Copy$int_rate,loan_Copy$term,mean)
class(loan_Copy$int_rate)
#----------------------------------------BIVariate ANALYSIS-----------------------------------------------
summary(loan_Copy_ChargedOff$annual_inc)
summary(loan_Copy_ChargedOff$annual_income_slot)
hist(AirPassengers,
main="Histogram for Air Passengers",
xlab="Passengers",
border="blue",
col="green",
xlim=c(100,700),
las=1,
breaks=5)
hist(loan_Copy_ChargedOff$annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income")
loan_Copy$annual_income_slot<- ifelse(loan_Copy$annual_inc<10000,10000,
ifelse(loan_Copy$annual_inc<20000,20000,
ifelse(loan_Copy$annual_inc<30000,30000,
ifelse(loan_Copy$annual_inc<40000,40000,
ifelse(loan_Copy$annual_inc<50000,50000,
ifelse(loan_Copy$annual_inc<60000,60000,
ifelse(loan_Copy$annual_inc<70000,70000,
ifelse(loan_Copy$annual_inc<80000,80000,
ifelse(loan_Copy$annual_inc<90000,90000,100000)))))))))
loan_Copy_FullyPaid<- subset(loan_Copy,loan_Copy$loan_status=="Fully Paid")
loan_Copy_ChargedOff<-subset(loan_Copy,loan_Copy$loan_status=="Charged Off")
loan_Copy_Current<-subset(loan_Copy,loan_Copy$loan_status=="Current")
hist(loan_Copy_ChargedOff$annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income")
hist(loan_Copy_Current$annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income")
hist(loan_Copy_FullyPaid $annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income")
length(loan_Copy$annual_inc>100000)
length(loan_Copy$annual_inc>1000000)
df_test<-subset(loan_Copy$annual_inc>100000)
df_test<-subset(loan_copy,loan_Copy$annual_inc>100000)
df_test<-subset(loan_Copy,loan_Copy$annual_inc>100000)
nrow(df_test)
g<-ggplot(loan_Copy_FullyPaid$annual_income_slot,aes(class))
nrow(df_test)
loan_Copy$annual_income_slot<- ifelse(loan_Copy$annual_inc<10000,10000,
ifelse(loan_Copy$annual_inc<20000,20000,
ifelse(loan_Copy$annual_inc<30000,30000,
ifelse(loan_Copy$annual_inc<40000,40000,
ifelse(loan_Copy$annual_inc<50000,50000,
ifelse(loan_Copy$annual_inc<60000,60000,
ifelse(loan_Copy$annual_inc<70000,70000,
ifelse(loan_Copy$annual_inc<80000,80000,
ifelse(loan_Copy$annual_inc<90000,90000,
ifelse(loan_Copy$annual_inc<100000,100000,
ifelse(loan_Copy$annual_inc<120000,120000,
ifelse(loan_Copy$annual_inc<150000,150000,
ifelse(loan_Copy$annual_inc<175000,175000,200000)))))))))))))
df_test<-subset(loan_Copy,loan_Copy$annual_inc>170000)
nrow(df_test)
loan_Copy$int_rate<- str_replace_all(loan_Copy$int_rate,'%','')
loan_Copy$int_rate<-as.numeric(loan_Copy$int_rate)
loan_Copy_FullyPaid<- subset(loan_Copy,loan_Copy$loan_status=="Fully Paid")
loan_Copy_ChargedOff<-subset(loan_Copy,loan_Copy$loan_status=="Charged Off")
loan_Copy_Current<-subset(loan_Copy,loan_Copy$loan_status=="Current")
nrow(loan_Copy_ChargedOff)+nrow(loan_Copy_Current)+nrow(loan_Copy_FullyPaid)
ggplot(loan_Copy, aes(x = loan_amnt,y = annual_inc, col = funded_amnt)) + geom_point()
ggplot(loan_Copy, aes(x = loan_amnt,y = annual_inc_slot, col = funded_amnt)) + geom_point()
ggplot(loan_Copy, aes(x = loan_amnt,y = annual_income_slot, col = funded_amnt)) + geom_point()
ggplot(loan_Copy, aes(x = annual_income_slot,y = funded_amnt_inv, col = revol_bal)) + geom_smooth()
ggplot(loan_Copy, aes(x = funded_amnt,y = funded_amnt_inv, col = annual_income_slot, size = revol_bal)) + geom_point()
ggplot(loan_Copy, aes(x = funded_amnt,y = funded_amnt_inv, col = annual_inc, size = revol_bal)) + geom_point()
ggplot(loan_Copy, aes(x = loan_amnt,y = annual_income_slot, col = funded_amnt, size = total_pymnt)) + geom_point()
ggplot(loan_Copy, aes(x = loan_amnt,y = annual_inc, col = loan_status)) + geom_smooth()
ggplot(loan_Copy, aes(x = funded_amnt,y = annual_inc, col = loan_status)) + geom_smooth()
ggplot(loan_Copy, aes(x = loan_amnt,y = revol_bal, col = loan_status)) + geom_smooth()
ggplot(loan_Copy, aes(x = loan_amnt,y = delinq_2yrs, col = loan_status)) + geom_smooth()
ggplot(loan_Copy, aes(x = loan_amnt,y = annual_inc, col = loan_status)) + geom_point()
ggplot(loan_Copy, aes(x = loan_amnt,y = delinq_2yrs, col = loan_status)) + geom_point()
summaryBy(loan_amnt~annual_inc, data=loan_Copy, FUN=function(x)
c(count=length(x), mean=mean(x), median=median(x)))
install.packages("doBy")
library("doby")
library("doBy")
summaryBy(loan_amnt~annual_inc, data=loan_Copy, FUN=function(x)
c(count=length(x), mean=mean(x), median=median(x)))
ddply(loan_Copy_ChargedOff, c('Annual Income', 'Loan Amount'), function(x) c(count=nrow(x), mean=mean(x$annual_inc), median=median(x$annual_inc)))
library(dplyr)
library("party")
ddply(loan_Copy_ChargedOff, c('Annual Income', 'Loan Amount'), function(x) c(count=nrow(x), mean=mean(x$annual_inc), median=median(x$annual_inc)))
library(plyr)
ddply(loan_Copy_ChargedOff, c('Annual Income', 'Loan Amount'), function(x) c(count=nrow(x), mean=mean(x$annual_inc), median=median(x$annual_inc)))
ddply(loan_Copy_ChargedOff, c("Annual Income", "Loan Amount"), function(x) c(count=nrow(x), mean=mean(x$annual_inc), median=median(x$annual_inc)))
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = annual_income_slot, col = funded_amnt)) + geom_point()
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = annual_income_slot, col = funded_amnt, size = total_pymnt)) + geom_point()
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = revol_bal , col = annual_inc)) + geom_text(aes(label = annual_inc))
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = revol_bal , col = annual_inc)) + geom_area()
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = revol_bal , col = annual_inc)) + geom_area(annual_inc)
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = revol_bal , col = annual_inc)) + geom_point()
nrow(loan_Copy_ChargedOff)
nrow(loan_Copy_Current)
nrow(loan_Copy_Current)
nrow(loan_Copy_FullyPaid)
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = delinq_2yrs)) + geom_smooth()
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = annual_inc)) + geom_point()
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = revol_bal)) + geom_point()
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = delinq_2yrs)) + geom_point()
hist(loan_Copy_ChargedOff$annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income")
hist(loan_Copy_ChargedOff$annual_inc,main = "Histogram for Income slots",xlab = "Annual income")
hist(loan_Copy_ChargedOff$annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income")
hist(loan_Copy_Current$annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income")
hist(loan_Copy_FullyPaid $annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income")
install.packages(agricolae)
install.packages("agricolae")
library ( agricolae )
table.freq(h)
h=hist(loan_Copy_ChargedOff$annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income")
table.freq(h)
h<-hist(loan_Copy_ChargedOff$annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income",right = FALSE)
table.freq(h)
nrow(loan_Copy_ChargedOff)
nrow(loan_Copy_Current)#
nrow(loan_Copy_FullyPaid)#
hist(loan_Copy_ChargedOff$annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income",right = FALSE)
Annual_Inc_filter_Chargerd_off< subset(loan_Copy_ChargedOff$annual_inc>30000 & loan_Copy_ChargedOff<80000)-
hist(loan_Copy_Current$annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income")
Annual_Inc_filter_Chargerd_off<- subset(loan_Copy_ChargedOff$annual_inc>30000 & loan_Copy_ChargedOff<80000)-
hist(loan_Copy_Current$annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income")
Annual_Inc_filter_Chargerd_off<- subset(loan_Copy_ChargedOff$annual_inc>30000 & loan_Copy_ChargedOff$annual_inc<80000)-
hist(loan_Copy_Current$annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income")
Annual_Inc_filter_Chargerd_off<- subset(loan_Copy_ChargedOff$annual_inc>30000 & loan_Copy_ChargedOff$annual_inc<80000)
Annual_Inc_filter_Chargerd_off<- subset(loan_Copy_ChargedOff,loan_Copy_ChargedOff$annual_inc>30000 & loan_Copy_ChargedOff$annual_inc<80000)
nrow(Annual_Inc_filter_Chargerd_off)
hist(loan_Copy_FullyPaid $annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income")
Annual_Inc_filter_fullypaid<- subset(loan_Copy_ChargedOff,loan_Copy_ChargedOff$annual_inc>20000 & loan_Copy_ChargedOff$annual_inc<90000)
nrow(Annual_Inc_filter_fullypaid)
Annual_Inc_filter_fullypaid<- subset(loan_Copy_FullyPaid,loan_Copy_FullyPaid$annual_inc>20000 & loan_Copy_FullyPaid$annual_inc<90000)
nrow(Annual_Inc_filter_fullypaid)
hist(loan_Copy_ChargedOff$funded_amnt,main = "Histogram for funded amounts",xlab = "Funded amount",right = FALSE)
Funded_amt_filter_Chargerd_off<- subset(loan_Copy_ChargedOff,loan_Copy_ChargedOff$funded_amnt >4000 & loan_Copy_ChargedOff$funded_amnt<16000)
nrow(Funded_amt_filter_Chargerd_off)
hist(loan_Copy_FullyPaid $funded_amnt,main = "Histogram for funded amounts",xlab = "Funded amount",right = FALSE)
Funded_amt_filter_FullyPaid<- subset(loan_Copy_FullyPaid,loan_Copy_FullyPaid$funded_amnt >4000 & loan_Copy_FullyPaid$funded_amnt<16000)
nrow(Funded_amt_filter_FullyPaid)
hist(loan_Copy_ChargedOff$int_rate,main = "Histogram for INTEREST RATES",xlab = "Interest Rate",right = FALSE)
hist(loan_Copy_FullyPaid$int_rate,main = "Histogram for INTEREST RATES",xlab = "Interest Rate",right = FALSE)
hist(loan_Copy_ChargedOff$int_rate,main = "Histogram for INTEREST RATES",xlab = "Interest Rate",right = FALSE)
Interest_Rate_filter_FullyPaid<- subset(loan_Copy_FullyPaid,loan_Copy_FullyPaid$funded_amnt >4000 & loan_Copy_FullyPaid$funded_amnt<16000)
hist(loan_Copy_FullyPaid$int_rate,main = "Histogram for INTEREST RATES",xlab = "Interest Rate",right = FALSE)
hist(loan_Copy_ChargedOff$installment,main = "Histogram for INSTALLMENT",xlab = "Installment",right = FALSE)
hist(loan_Copy_FullyPaid$installment,main = "Histogram for INSTALLMENT",xlab = "Installment",right = FALSE)
hist(loan_Copy_FullyPaid$installment,main = "Histogram for INSTALLMENT",xlab = "Installment",right = FALSE)
hist(loan_Copy_ChargedOff$installment,main = "Histogram for INSTALLMENT",xlab = "Installment",right = FALSE)
hist(loan_Copy_FullyPaid$installment,main = "Histogram for INSTALLMENT",xlab = "Installment",right = FALSE)
hist(loan_Copy_ChargedOff$emp_title,main = "Histogram for Emp Title",xlab = "Emp Title",right = FALSE)
plot(loan_Copy_ChargedOff$emp_title,main = "Histogram for Emp Title",xlab = "Emp Title",right = FALSE)
barplot(loan_Copy_ChargedOff$emp_title,main = "Histogram for Emp Title",xlab = "Emp Title",right = FALSE)
?boxplot
x<- table(loan_Copy_ChargedOff$emp_title)
x
p<- ggplot(loan_Copy$emp_title,aes(class,loan_Copy$loan_status))
p<- ggplot(loan_Copy,aes(x=loan_Copy$emp_title,loan_Copy$loan_status))+geom_boxplot()
p
ggplot(loan_Copy,aes(x=loan_Copy$emp_title,loan_Copy$loan_status))+geom_boxplot()
mode(loan_Copy_ChargedOff$emp_title)
mode(factor(loan_Copy_ChargedOff$emp_title) )
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(loan_Copy_ChargedOff$emp_title )
getmode(loan_Copy_FullyPaid$emp_title)
getmode(loan_Copy_ChargedOff$verification_status )
getmode(loan_Copy_FullyPaid$verification_status)
getmode(loan_Copy_ChargedOff$purpose )
getmode(loan_Copy_FullyPaid$purpose )
loan_Copy_FullyPaid
loan_Copy_ChargedOff
getmode(loan_Copy_ChargedOff$addr_state )
getmode(loan_Copy_FullyPaid$addr_state )
boxplot(loan_Copy_ChargedOff$annual_income_slot)
boxplot(loan_Copy_ChargedOff$annual_inc)
boxplot(loan_Copy$annual_inc~loan_Copy$loan_status,xlab="loan status",ylab="annual income")
boxplot(loan_Copy$annual_income_slot~loan_Copy$loan_status,xlab="loan status",ylab="annual income")
boxplot(loan_Copy$funded_amnt~loan_Copy$loan_status,xlab="loan status",ylab="annual income")
boxplot(loan_Copy$funded_amnt~loan_Copy$loan_status,xlab="loan status",ylab="Funded Amount")
hist(loan_Copy_ChargedOff$annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income",right = FALSE)
hist(loan_Copy_ChargedOff$annual_income_slot,main = "Histogram for Income slots charged Off",xlab = "Annual income",right = FALSE)
hist(loan_Copy_FullyPaid $annual_income_slot,main = "Histogram for Income slots-Fully Paid",xlab = "Annual income")
boxplot(loan_Copy$annual_income_slot~loan_Copy$loan_status,xlab="loan status",ylab="annual income")
summaryBy(loan_amnt~annual_inc, data=loan_Copy, FUN=function(x)
c(count=length(x), mean=mean(x), median=median(x)))
summaryBy(loan_amnt~annual_income_slot, data=loan_Copy, FUN=function(x)
c(count=length(x), mean=mean(x), median=median(x)))
ggplot(loan_Copy, aes(x=loan_amount,y=annual_income_slot))+geom_smooth()
ggplot(loan_Copy, aes(x=loan_amount,y=annual_income_slot))+geom_point()
ggplot(loan_Copy, aes(x=loan_amount,y=annual_income_slot,col = funded_amnt))+geom_point()
ggplot(loan_Copy, aes(x = loan_amnt,y = annual_income_slot, col = funded_amnt)) + geom_point()
ggplot(loan_Copy, aes(x=loan_amount,y=annual_income_slot,col = funded_amnt))+geom_smooth()
ggplot(loan_Copy, aes(x=loan_amnt,y=annual_income_slot,col = funded_amnt))+geom_smooth()
ggplot(loan_Copy, aes(x=annual_income_slot,y=loan_amnt,col = funded_amnt))+geom_smooth()
ggplot(loan_Copy, aes(x = annual_income_slot,y = loan_amnt, col = funded_amnt)) + geom_point()
ggplot(loan_Copy, aes(x =annual_income_slot,y = loan_amnt, col = funded_amnt, size = total_pymnt)) + geom_point()
ggplot(loan_Copy, aes(x = annual_income_slot,y = loan_amnt, col = funded_amnt)) + geom_point()
ggplot(loan_Copy, aes(x = funded_amnt,y = funded_amnt_inv, col = annual_income_slot, size = revol_bal)) + geom_point()
ggplot(loan_Copy, aes(x = funded_amnt_inv,y = revol_bal, col = funded_amnt)) + geom_point()
ggplot(loan_Copy, aes(x = funded_amnt,y = funded_amnt_inv, col = annual_income_slot, size = revol_bal)) + geom_point()
ggplot(loan_Copy, aes(x = loan_amnt,y = loan_status, col =annual_income_slot )) + geom_smooth()
ggplot(loan_Copy, aes(x = loan_amnt,y = loan_status, col =annual_inc )) + geom_smooth()
ggplot(loan_Copy, aes(x = loan_status,y =loan_amnt , col =annual_inc )) + geom_smooth()
ggplot(loan_Copy, aes(x = funded_amnt_inv,y = revol_bal, col = funded_amnt)) + geom_point()
ggplot(loan_Copy, aes(x = loan_status,y =loan_amnt , col =annual_inc )) + geom_smooth()
ggplot(loan_Copy, aes(x = loan_status,y =loan_amnt , col =annual_inc )) + geom_point()
ggplot(loan_Copy, aes(x = loan_status,y =loan_amnt , col =annual_inc,size=loan_amnt )) + geom_point()
ggplot(loan_Copy, aes(x = annual_income_slot,y = funded_amnt_inv, col = revol_bal)) + geom_smooth()
ggplot(loan_Copy, aes(x = funded_amnt,y = funded_amnt_inv, col = annual_inc, size = revol_bal)) + geom_point()
ggplot(loan_Copy, aes(x = funded_amnt,y = funded_amnt_inv, col = annual_inc, size = revol_bal)) + geom_point()
ggplot(loan_Copy, aes(x = funded_amnt,y = funded_amnt_inv, col = annual_income_slot, size = revol_bal)) + geom_point()
ggplot(loan_Copy, aes(x = funded_amnt_inv,y = revol_bal, col = funded_amnt)) + geom_point()
ggplot(loan_Copy, aes(x = funded_amnt_inv,y = revol_bal, col = funded_amnt)) + geom_smooth()
ggplot(loan_Copy, aes(x = funded_amnt_inv,y = revol_bal, col = annual_inc)) + geom_smooth()
ggplot(loan_Copy, aes(x = loan_status,y =loan_amnt , col =annual_inc,size=loan_amnt )) + geom_point()
ggplot(loan_Copy, aes(x = funded_amnt,y = annual_inc, col = loan_status)) + geom_smooth()
ggplot(loan_Copy, aes(x = annual_inc,y =loan_amnt , col =loan_status,size=loan_amnt )) + geom_point()
ggplot(loan_Copy, aes(x = annual_inc,y =funded_amnt , col = loan_status)) + geom_smooth()
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = delinq_2yrs, col = loan_status)) + geom_smooth()
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = annual_inc)) + geom_point()
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = revol_bal)) + geom_point()
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = revol_bal)) + geom_smooth()
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = delinq_2yrs)) + geom_smooth()
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = annual_inc)) + geom_point()
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = annual_inc)) + geom_smooth()
summaryBy(loan_amnt~annual_income_slot, data=loan_Copy_FullyPaid, FUN=function(x)
c(count=length(x), mean=mean(x), median=median(x)))
summaryBy(loan_amnt~annual_income_slot, data=loan_Copy_ChargedOff, FUN=function(x)
c(count=length(x), mean=mean(x), median=median(x)))
hist(loan_Copy_ChargedOff$annual_income_slot,main = "Histogram for Income slots charged Off",xlab = "Annual income",right = FALSE)
hist(loan_Copy_FullyPaid $annual_income_slot,main = "Histogram for Income slots-Fully Paid",xlab = "Annual income")
nrow(Annual_Inc_filter_Chargerd_off)
hist(loan_Copy_Current$annual_income_slot,main = "Histogram for Income slots",xlab = "Annual income")
boxplot(loan_Copy$annual_inc~loan_Copy$loan_status,xlab="loan status",ylab="annual income")
boxplot(loan_Copy$annual_income_slot~loan_Copy$loan_status,xlab="loan status",ylab="annual income")
hist(loan_Copy_ChargedOff$int_rate,main = "Histogram for INTEREST RATES",xlab = "Interest Rate",right = FALSE)
hist(loan_Copy_FullyPaid$int_rate,main = "Histogram for INTEREST RATES",xlab = "Interest Rate",right = FALSE)
summaryBy(loan_amnt~annual_income_slot, data=loan_Copy, FUN=function(x)
c(count=length(x), mean=mean(x), median=median(x)))
summaryBy(loan_amnt~annual_income_slot, data=loan_Copy_ChargedOff, FUN=function(x)
c(count=length(x), mean=mean(x), median=median(x)))
summaryBy(loan_amnt~annual_income_slot, data=loan_Copy_FullyPaid, FUN=function(x)
c(count=length(x), mean=mean(x), median=median(x)))
summaryBy(loan_amnt~annual_income_slot, data=loan_Copy_ChargedOff, FUN=function(x)
c(count=length(x), mean=mean(x), median=median(x)))
ggplot(loan_Copy, aes(x=annual_income_slot,y=loan_amnt,col = funded_amnt))+geom_smooth()
ggplot(loan_Copy_ChargedOff, aes(x = loan_amnt,y = annual_income_slot, col = funded_amnt)) + geom_point()
ggplot(loan_Copy_ChargedOff, aes(x=annual_income_slot,y=loan_amnt,col = funded_amnt))+geom_smooth()
ggplot(loan_Copy_ChargedOff, aes(x=annual_income_slot,y=loan_amnt,col = funded_amnt))+geom_smooth()
ggplot(loan_Copy_ChargedOff, aes(x=annual_income_slot,y=loan_amnt,col = funded_amnt))+geom_smooth()
ggplot(loan_Copy, aes(x=annual_income_slot,y=loan_amnt,col = funded_amnt,main="main graph"))+geom_smooth()
ggplot(loan_Copy, aes(x=factor(loan_Copy$term), fill=loan_Copy$funded_amnt)) +geom_bar()
ggplot(loan_Copy, aes(x = loan_amnt,y = annual_income_slot, col = funded_amnt)) + geom_point(position = "jitter")
corrgram(loan_Copy, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="All variables correlation Matrix")
install.packages("corrgram")
library(corrgram)
corrgram(loan_Copy, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="All variables correlation Matrix")
ggplot(loan_Copy, aes(x = loan_amnt,y = revol_bal , col = annual_inc)) + geom_text(aes(label = annual_inc))
ggplot(loan_Copy_FullyPaid, aes(x = loan_amnt,y = annual_inc)) + geom_smooth()
ggplot(loan_Copy,aes(x=loan_status,y=funded_amnt))+geom_smooth()
ggplot(loan_Copy,aes(x=funded_amnt,y=loan_status))+geom_smooth()
correl(loan_Copy$loan_amnt,loan_Copy$annual_inc, method = "pearson" , alternative = "two.sided")
revol_bal_vs_revol_util <-c("revol_bal","revol_util")
revol_cal_util<-loan_Copy[ , (names(loan_Data) %in% revol_bal_vs_revol_util)]
correl(loan_Copy$annual_inc,loan_Copy$total_pymnt, method = "pearson" , alternative = "two.sided")
correl(loan_Copy$total_rec_prncp,loan_Copy$total_rec_int, method = "pearson" , alternative = "two.sided")
ggplot(loan_Copy, aes(x=loan_Copy$annual_inc,y=loan_Copy$total_pymnt, col=factor(loan_Copy$loan_status))) +geom_point(shape=2, size=4)
